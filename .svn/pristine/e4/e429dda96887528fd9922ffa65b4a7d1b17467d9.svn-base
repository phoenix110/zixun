{"version":3,"sources":["../../../src/@ionic-native/plugins/alipay/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AA8D3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AAWH;IAA4B,0BAAiB;IAA7C;;IAcA,CAAC;IAbC;;;;OAIG;IAEH,oBAAG,GAAH,UAAI,KAAkB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAC5C,iBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,qBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IANA;QADC,OAAO,EAAE;;;;qCACuC;IAPtC,MAAM;QAVlB,MAAM,CAAC;YACN,UAAU,EAAE,QAAQ;YACpB,MAAM,EAAE,qBAAqB;YAC7B,SAAS,EAAE,aAAa;YACxB,IAAI,EAAE,+CAA+C;YACrD,OAAO,EAAE,4EAA4E;YACrF,gBAAgB,EAAE,CAAC,QAAQ,CAAC;YAC5B,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,MAAM,CAclB;IAAD,aAAC;CAdD,AAcC,CAd2B,iBAAiB,GAc5C;SAdY,MAAM","file":"index.js","sourceRoot":"","sourcesContent":["import { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n\r\nexport interface AlipayOrder {\r\n  /**\r\n   * appId assigned by Alipay\r\n   */\r\n  app_id: string;\r\n\r\n  /**\r\n   * Api name.\r\n   * Should be: alipay.trade.app.pay\r\n   */\r\n  method: string;\r\n\r\n  /**\r\n   * Data format\r\n   * Default: \"JSON\"\r\n   */\r\n  format?: string;\r\n\r\n  /**\r\n   * Charset\r\n   * Possible values: \"UTF-8\", \"GBK\"\r\n   * Default: \"UTF-8\"\r\n   */\r\n  charset: string;\r\n\r\n  /**\r\n   * Sign method\r\n   * Default: 'RSA'\r\n   */\r\n  sign_type: string;\r\n\r\n  /**\r\n   * Sign value. Should be got from server side.\r\n   * Default: 'RSA'\r\n   */\r\n  sign: string;\r\n\r\n  /**\r\n   * Timestamp, formated like \"yyyy-MM-dd HH:mm:ss\", e.g. 2014-07-24 03:07:50\r\n   */\r\n  timestamp: string;\r\n\r\n  /**\r\n   * Api version. Fixed value '1.0'\r\n   */\r\n  version: string;\r\n\r\n  /**\r\n   * Notify url.\r\n   */\r\n  notify_url: string;\r\n\r\n  /**\r\n   * biz content. formated in json. see alipay doc for detail.\r\n   */\r\n  biz_content: string;\r\n}\r\n\r\n/**\r\n * @name Alipay\r\n * @description\r\n * This plugin is used for Alipay APP support. Integrated with the latest SDK.\r\n *\r\n * Requires Cordova plugin: `cordova-alipay-base`. For more info, please see the [Alipay plugin docs](https://github.com/xueron/cordova-alipay-base).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Alipay, AlipayOrder } from '@ionic-native/alipay';\r\n *\r\n * constructor(private alipay: Alipay) {\r\n *\r\n * // Should get from server side with sign.\r\n * const alipayOrder: AlipayOrder = {\r\n *       ...\r\n *     };\r\n *\r\n *\r\n * this.alipay.pay(alipayOrder)\r\n *    .then(result => {\r\n *       console.log(result); // Success\r\n *    })\r\n *    .catch(error => {\r\n *       console.log(error); // Failed\r\n *    });\r\n *\r\n * }\r\n *\r\n *\r\n * ```\r\n *\r\n * @interfaces\r\n * AlipayOrder\r\n */\r\n@Plugin({\r\n  pluginName: 'Alipay',\r\n  plugin: 'cordova-alipay-base',\r\n  pluginRef: 'Alipay.Base',\r\n  repo: 'https://github.com/xueron/cordova-alipay-base',\r\n  install: 'ionic cordova plugin add cordova-alipay-base --variable APP_ID=your_app_id',\r\n  installVariables: ['APP_ID'],\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class Alipay extends IonicNativePlugin {\r\n  /**\r\n   * Open Alipay to perform App pay\r\n   * @param order { AlipayOrder } alipay options\r\n   * @returns {Promise<any>} Returns a Promise that resolves with the success return, or rejects with an error.\r\n   */\r\n  @Cordova()\r\n  pay(order: AlipayOrder): Promise<any> { return; }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}